[
    {   "direction": "Frontend",
        "stack": [
            {
                "category": "Language",
                "members": [
                    {
                        "name": "HTML",
                        "description": "HTML (Hypertext Markup Language) is the standard markup language used to create web pages and web applications. It provides a structure for content on the World Wide Web, using a system of elements and attributes to define the layout and content of a document. HTML elements are represented by tags, which browsers interpret to render the visual and auditory elements of a web page. The language has evolved through several versions, with HTML5 being the current standard, introducing semantic elements, improved multimedia support, and enhanced form controls. HTML works in conjunction with CSS for styling and JavaScript for interactivity, forming the foundation of modern web development.",
                        "video": "https://www.youtube.com/watch?v=W4MIiV4nZDY"
                    },
                    {
                        "name": "CSS",
                        "description": "CSS (Cascading Style Sheets) is a styling language used to describe the presentation of a document written in HTML or XML. It defines how elements should be displayed on screen, on paper, or in other media. CSS separates the design from the content, allowing for greater flexibility and control over the layout, colors, and fonts of web pages. It uses a system of selectors to target HTML elements and apply styles to them. CSS supports responsive design through media queries, enabling the creation of layouts that adapt to different screen sizes and devices. The cascade, inheritance, and specificity are key concepts in CSS that determine how styles are applied when multiple rules target the same element. Modern CSS includes features like Flexbox and Grid for advanced layout control, animations, and transitions for creating dynamic user interfaces.",
                        "video": "https://www.youtube.com/watch?v=WpridlBQmdk"
                    },
                    {
                        "name": "JavaScript",
                        "description": "JavaScript is a high-level, interpreted programming language that is a core technology of the World Wide Web. It allows for dynamic, client-side scripting in web browsers, enabling interactive web pages and user interfaces. JavaScript supports object-oriented, imperative, and functional programming styles. It’s also used server-side through Node.js, for desktop application development with frameworks like Electron, and in various other contexts. The language features dynamic typing, first-class functions, and prototype-based object-orientation. JavaScript’s ubiquity in web development, coupled with its versatility and continuous evolution through ECMAScript standards, has made it one of the most popular programming languages in use today.",
                        "video": "https://www.youtube.com/watch?v=upDLs1sn7g4"
                    }
                ]

            },
            {
                "category": "Framework",
                "members": [
                    {
                        "name": "React",
                        "description": "React is an open-source JavaScript library for building user interfaces, primarily for single-page applications. Developed and maintained by Facebook, it allows developers to create reusable UI components that efficiently update and render as data changes. React uses a virtual DOM for performance optimization and supports a unidirectional data flow. Its component-based architecture promotes modularity and reusability. React’s ecosystem includes tools like Redux for state management and React Native for mobile app development. The library’s declarative nature, efficient rendering, and strong community support have made it one of the most popular choices for front-end development in modern web applications.",
                        "video": "https://www.youtube.com/watch?v=Tn6-PIqc4UM"
                    },
                    {
                        "name": "Angular",
                        "description": "Angular is a popular open-source web application framework developed and maintained by Google. It uses TypeScript, a statically typed superset of JavaScript, to build scalable and efficient single-page applications (SPAs). Angular follows a component-based architecture, where the user interface is composed of reusable, self-contained components. The framework provides features like two-way data binding, dependency injection, and a powerful template syntax, which simplify the development of complex web applications. Angular also includes a comprehensive set of tools for testing, routing, and state management, making it a full-fledged solution for front-end development. Its modular structure and emphasis on best practices make it particularly suitable for large-scale enterprise applications.",
                        "video": "https://www.youtube.com/watch?v=Ata9cSC2WpM"
                    },
                    {
                        "name": "Vue.js",
                        "description": "Vue.js is a progressive JavaScript framework for building user interfaces. It’s designed to be incrementally adoptable, allowing developers to integrate it into projects gradually. Vue uses a template-based approach with a virtual DOM for efficient rendering. It features a reactive and composable component system, making it easy to organize and reuse code. Vue’s core library focuses on the view layer, but it can be easily extended with official and community-built tools for state management, routing, and build tooling. Known for its gentle learning curve and flexibility, Vue has gained popularity for both small projects and large-scale applications. Its performance, lightweight nature, and comprehensive documentation have contributed to its widespread adoption in the web development community.",
                        "video": "https://www.youtube.com/watch?v=nhBVL41-_Cw"
                    }
                ]

            },
            {
                "category": "Testing",
                "members": [
                    {
                        "name": "Playwright",
                        "description": "Playwright is an open-source automation framework developed by Microsoft for end-to-end testing of web applications. It provides a single API to automate Chromium, Firefox, and WebKit browsers across Windows, macOS, and Linux. Playwright supports multiple programming languages including JavaScript, TypeScript, Python, and .NET. It offers features like auto-waiting, network interception, and mobile emulation. The framework excels in handling modern web apps with dynamic content, providing reliable automation through its ability to wait for elements to be ready before acting on them. Playwright’s cross-browser and cross-platform capabilities, combined with its powerful tooling for debugging and test generation, make it a robust choice for automated testing of web applications.",
                        "video": "https://www.youtube.com/watch?v=SW3TqvhrzU4"
                    },
                    {
                        "name": "Cypress",
                        "description": "Cypress framework is a JavaScript-based end-to-end testing framework built on top of Mocha – a feature-rich JavaScript test framework running on and in the browser, making asynchronous testing simple and convenient. It also uses a BDD/TDD assertion library and a browser to pair with any JavaScript testing framework.",
                        "video": "https://www.youtube.com/watch?v=BQqzfHQkREo"
                    }
                ]

            },
            {
                "category": "Module Bundlers",
                "members": [
                    {
                        "name": "Vite",
                        "description": "Vite is a modern build tool and development server designed for fast and lean development of web applications. Created by Evan You, the author of Vue.js, Vite leverages native ES modules in the browser to enable near-instantaneous server start and lightning-fast hot module replacement (HMR). It supports various frameworks including Vue, React, and Svelte out of the box. Vite uses Rollup for production builds, resulting in highly optimized bundles. It offers features like CSS pre-processor support, TypeScript integration, and plugin extensibility. Vite’s architecture, which separates dev and build concerns, allows for faster development cycles and improved developer experience, particularly for large-scale projects where traditional bundlers might struggle with performance.",
                        "video": "https://www.youtube.com/watch?v=KCrXgy8qtjM"
                    },
                    {
                        "name": "Webpack",
                        "description": "Webpack is a popular open-source JavaScript module bundler that transforms, bundles, or packages resources for the web. It takes modules with dependencies and generates static assets representing those modules. Webpack can handle not just JavaScript, but also other assets like CSS, images, and fonts. It uses loaders to preprocess files and plugins to perform a wider range of tasks like bundle optimization. Webpack’s key features include code splitting, lazy loading, and a rich ecosystem of extensions. It supports hot module replacement for faster development and tree shaking to eliminate unused code. While it has a steeper learning curve compared to some alternatives, Webpack’s flexibility and powerful features make it a standard tool in many modern JavaScript development workflows, especially for complex applications.",
                        "video": "https://www.youtube.com/watch?v=nfmvexyoHXE"
                    },
                    {
                        "name": "Parcel",
                        "description": "Parcel is a zero-configuration web application bundler that simplifies the process of building and deploying web projects. It supports multiple programming languages and file types out of the box, including JavaScript, CSS, HTML, and various image formats. Parcel automatically analyzes dependencies, transforms code, and optimizes assets without requiring a complex configuration file. It offers features like hot module replacement, code splitting, and tree shaking by default. Parcel’s main selling point is its ease of use and fast build times, achieved through parallel processing and caching. While it may lack some advanced features of more established bundlers like Webpack, Parcel’s simplicity and performance make it an attractive option for rapid prototyping and smaller projects.",
                        "video": "https://www.youtube.com/watch?v=ILHn43wsDv0"
                    }
                ]

            }

        ]
    },
    {
        "direction": "Backend",
        "stack": [
            {
                "category": "Language",
                "members": [
                    {
                        "name": "Node.js",
                        "description": "Node.js is an open-source and cross-platform JavaScript runtime environment. It is a popular tool for almost any kind of project! Node.js runs the V8 JavaScript engine, Google Chrome’s core, outside the browser. This allows Node.js to be very performant. A Node.js app runs in a single process, without creating a new thread for every request. Node.js provides a set of asynchronous I/O primitives in its standard library that prevent JavaScript code from blocking and generally, libraries in Node.js are written using non-blocking paradigms, making blocking behavior the exception rather than the norm.",
                        "video": "https://www.youtube.com/watch?v=ATCs2BY-acA"
                    },
                    {
                        "name": "Go",
                        "description": "Go, also known as Golang, is a statically typed, compiled programming language designed by Google. It combines the efficiency of compiled languages with the ease of use of dynamically typed interpreted languages. Go features built-in concurrency support through goroutines and channels, making it well-suited for networked and multicore systems. It has a simple and clean syntax, fast compilation times, and efficient garbage collection. Go’s standard library is comprehensive, reducing the need for external dependencies. The language emphasizes simplicity and readability, with features like implicit interfaces and a lack of inheritance. Go is particularly popular for building microservices, web servers, and distributed systems. Its performance, simplicity, and robust tooling make it a favored choice for cloud-native development, DevOps tools, and large-scale backend systems.",
                        "video": "https://www.youtube.com/watch?v=446E-r0rXHI"
                    },
                    {
                        "name": "Python",
                        "description": "Python is a high-level, interpreted programming language known for its readability, simplicity, and versatility. Its design emphasizes code readability and a clear, straightforward syntax, making it accessible for both beginners and experienced developers. Python supports multiple programming paradigms, including procedural, object-oriented, and functional programming. It has a rich ecosystem of libraries and frameworks, such as Django and Flask for web development, Pandas and NumPy for data analysis, and TensorFlow and PyTorch for machine learning. Python is widely used in web development, data science, automation, and scripting, and it benefits from a strong community and extensive documentation.",
                        "video": "https://www.youtube.com/watch?v=x7X9w_GIm1s"
                    }                    
                ]
            },
            {
                "category": "Version Control Systems",
                "members": [
                    {
                        "name": "Git",
                        "description": "Git is a distributed version control system designed to handle projects of any size with speed and efficiency. Created by Linus Torvalds in 2005, it tracks changes in source code during software development, allowing multiple developers to work together on non-linear development. Git maintains a complete history of all changes, enabling easy rollbacks and comparisons between versions. Its distributed nature means each developer has a full copy of the repository, allowing for offline work and backup. Git’s key features include branching and merging capabilities, staging area for commits, and support for collaborative workflows like pull requests. Its speed, flexibility, and robust branching and merging capabilities have made it the most widely used version control system in software development, particularly for open-source projects and team collaborations.",
                        "video": "https://www.youtube.com/watch?v=hwP7WQkmECE"
                    }
                ]
            },
            {
                "category": "Database",
                "members": [
                    {
                        "name": "PostgreSQL",
                        "description": "PostgreSQL is an advanced, open-source relational database management system (RDBMS) known for its robustness, extensibility, and standards compliance. It supports a wide range of data types and advanced features, including complex queries, foreign keys, and full-text search. PostgreSQL is highly extensible, allowing users to define custom data types, operators, and functions. It supports ACID (Atomicity, Consistency, Isolation, Durability) properties for reliable transaction processing and offers strong support for concurrency and data integrity. Its capabilities make it suitable for various applications, from simple web apps to large-scale data warehousing and analytics solutions.",
                        "video": "https://www.youtube.com/watch?v=n2Fluyr3lbc"
                    },
                    {
                        "name": "MySQL",
                        "description": "MySQL is an open-source relational database management system (RDBMS) known for its speed, reliability, and ease of use. It uses SQL (Structured Query Language) for database interactions and supports a range of features for data management, including transactions, indexing, and stored procedures. MySQL is widely used for web applications, data warehousing, and various other applications due to its scalability and flexibility. It integrates well with many programming languages and platforms, and is often employed in conjunction with web servers and frameworks in popular software stacks like LAMP (Linux, Apache, MySQL, PHP/Python/Perl). MySQL is maintained by Oracle Corporation and has a large community and ecosystem supporting its development and use.",
                        "video": "https://www.youtube.com/watch?v=Cz3WcZLRaWc"
                    },                    
                    {
                        "name": "Oracle",
                        "description": "Oracle Database is a highly robust, enterprise-grade relational database management system (RDBMS) developed by Oracle Corporation. Known for its scalability, reliability, and comprehensive features, Oracle Database supports complex data management tasks and mission-critical applications. It provides advanced functionalities like SQL querying, transaction management, high availability through clustering, and data warehousing. Oracle’s database solutions include support for various data models, such as relational, spatial, and graph, and offer tools for security, performance optimization, and data integration. It is widely used in industries requiring large-scale, secure, and high-performance data processing.",
                        "video": "https://www.youtube.com/watch?v=1Ra3sNYACsM"
                    },
                    {
                        "name": "SQLite",
                        "description": "SQLite is a lightweight, serverless, self-contained SQL database engine that is designed for simplicity and efficiency. It is widely used in embedded systems and applications where a full-featured database server is not required, such as mobile apps, desktop applications, and small to medium-sized websites. SQLite stores data in a single file, which makes it easy to deploy and manage. It supports standard SQL queries and provides ACID (Atomicity, Consistency, Isolation, Durability) compliance to ensure data integrity. SQLite’s small footprint, minimal configuration, and ease of use make it a popular choice for applications needing a compact, high-performance database solution.",
                        "video": "https://www.youtube.com/watch?v=p2tOmltUh34"
                    }
                ]
            },
            {
                "category": "Authentication",
                "members": [
                    {
                        "name": "JWT",
                        "description": "JWT (JSON Web Token) is an open standard for securely transmitting information between parties as a JSON object. It consists of three parts: a header (which specifies the token type and algorithm used for signing), a payload (which contains the claims or the data being transmitted), and a signature (which is used to verify the token’s integrity and authenticity). JWTs are commonly used for authentication and authorization purposes, allowing users to securely transmit and validate their identity and permissions across web applications and APIs. They are compact, self-contained, and can be easily transmitted in HTTP headers, making them popular for modern web and mobile applications.",
                        "video": "https://www.youtube.com/watch?v=K6pwjJ5h0Gg"
                    },
                    {
                        "name": "OAuth",
                        "description": "OAuth is an open standard for authorization that allows third-party applications to access a user’s resources without exposing their credentials. It works by issuing access tokens after users grant permission, which applications then use to interact with resource servers on behalf of the user. This process involves a resource owner (the user), a resource server (which holds the data), and an authorization server (which issues tokens). OAuth enables secure, token-based access management, commonly used for granting applications permissions to interact with services like social media accounts or cloud storage.",
                        "video": "https://www.youtube.com/watch?v=ZV5yTm4pT8g"
                    },                    
                    {
                        "name": "Basic authentication",
                        "description": "Basic Authentication is a simple HTTP authentication scheme built into the HTTP protocol. It works by sending a user’s credentials (username and password) encoded in base64 format within the HTTP header. When a client makes a request to a server requiring authentication, the server responds with a 401 status code and a “WWW-Authenticate” header. The client then resends the request with the Authorization header containing the word “Basic” followed by the base64-encoded string of “username:password”. While easy to implement, Basic Authentication has significant security limitations: credentials are essentially sent in plain text (base64 is easily decoded), and it doesn’t provide any encryption. Therefore, it should only be used over HTTPS connections to ensure the credentials are protected during transmission. Due to its simplicity and lack of advanced security features, Basic Authentication is generally recommended only for simple, low-risk scenarios or as a fallback mechanism.",
                        "video": "https://www.youtube.com/watch?v=rhi1eIjSbvk"
                    },
                    {
                        "name": "Token authentication",
                        "description": "Token-based authentication is a protocol which allows users to verify their identity, and in return receive a unique access token. During the life of the token, users then access the website or app that the token has been issued for, rather than having to re-enter credentials each time they go back to the same webpage, app, or any resource protected with that same token. Auth tokens work like a stamped ticket. The user retains access as long as the token remains valid. Once the user logs out or quits an app, the token is invalidated. Token-based authentication is different from traditional password-based or server-based authentication techniques. Tokens offer a second layer of security, and administrators have detailed control over each action and transaction.",
                        "video": "https://www.youtube.com/watch?v=giKeegmeaKw"
                    }
                ]
            },
            {
                "category": "API",
                "members": [
                    {
                        "name": "REST",
                        "description": "A REST API (Representational State Transfer Application Programming Interface) is an architectural style for designing networked applications. It relies on standard HTTP methods (GET, POST, PUT, DELETE) to interact with resources, which are represented as URIs (Uniform Resource Identifiers). REST APIs are stateless, meaning each request from a client to a server must contain all the information needed to understand and process the request. They use standard HTTP status codes to indicate the outcome of requests and often communicate in formats like JSON or XML. REST APIs are widely used due to their simplicity, scalability, and ease of integration with web services and applications.",
                        "video": "https://www.youtube.com/watch?v=lsMQRaeKNDk"
                    },
                    {
                        "name": "JSON API",
                        "description": "JSON or JavaScript Object Notation is an encoding scheme that is designed to eliminate the need for an ad-hoc code for each application to communicate with servers that communicate in a defined way. JSON API module exposes an implementation for data stores and data structures, such as entity types, bundles, and fields.",
                        "video": "https://www.youtube.com/watch?v=N-4prIh7t38"
                    },                    
                    {
                        "name": "SOAP",
                        "description": "Simple Object Access Protocol (SOAP) is a message protocol for exchanging information between systems and applications. When it comes to application programming interfaces (APIs), a SOAP API is developed in a more structured and formalized way. SOAP messages can be carried over a variety of lower-level protocols, including the web-related Hypertext Transfer Protocol (HTTP).",
                        "video": "https://www.youtube.com/watch?v=sTGgBoFBDAY"
                    },
                    {
                        "name": "GraphQL",
                        "description": "GraphQL is a query language for APIs and a runtime for executing those queries, developed by Facebook. Unlike REST, where fixed endpoints return predefined data, GraphQL allows clients to request exactly the data they need, making API interactions more flexible and efficient. It uses a single endpoint and relies on a schema that defines the types and structure of the available data. This approach reduces over-fetching and under-fetching of data, making it ideal for complex applications with diverse data needs across multiple platforms (e.g., web, mobile).",
                        "video": "https://www.youtube.com/watch?v=eIQh02xuVw4"
                    }
                ]
            }
        ]
    },
    {
        "direction": "Fullstack",
        "stack": [
            {
                "category": "Language",
                "members": [
                    {
                        "name": "HTML",
                        "description": "HTML stands for HyperText Markup Language. It is used on the frontend and gives the structure to the webpage which you can style using CSS and make interactive using JavaScript.",
                        "video": "https://www.youtube.com/watch?v=W4MIiV4nZDY"
                    },
                    {
                        "name": "CSS",
                        "description": "CSS or Cascading Style Sheets is the language used to style the frontend of any website. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.",
                        "video": "https://www.youtube.com/watch?v=WpridlBQmdk"
                    },
                    {
                        "name": "JavaScript",
                        "description": "JavaScript allows you to add interactivity to your pages. Common examples that you may have seen on the websites are sliders, click interactions, popups and so on.",
                        "video": "https://www.youtube.com/watch?v=upDLs1sn7g4"
                    },
                    {
                        "name": "Node.js",
                        "description": "Node.js is an open-source and cross-platform JavaScript runtime environment. It is a popular tool for almost any kind of project! Node.js runs the V8 JavaScript engine, Google Chrome’s core, outside the browser. This allows Node.js to be very performant. A Node.js app runs in a single process, without creating a new thread for every request. Node.js provides a set of asynchronous I/O primitives in its standard library that prevent JavaScript code from blocking and generally, libraries in Node.js are written using non-blocking paradigms, making blocking behavior the exception rather than the norm.",
                        "video": "https://www.youtube.com/watch?v=ATCs2BY-acA"
                    },
                    {
                        "name": "Python",
                        "description": "Python is a high-level, interpreted programming language known for its readability, simplicity, and versatility. Its design emphasizes code readability and a clear, straightforward syntax, making it accessible for both beginners and experienced developers. Python supports multiple programming paradigms, including procedural, object-oriented, and functional programming. It has a rich ecosystem of libraries and frameworks, such as Django and Flask for web development, Pandas and NumPy for data analysis, and TensorFlow and PyTorch for machine learning. Python is widely used in web development, data science, automation, and scripting, and it benefits from a strong community and extensive documentation.",
                        "video": "https://www.youtube.com/watch?v=x7X9w_GIm1s"
                    },
                    {
                        "name": "Go",
                        "description": "Go, also known as Golang, is a statically typed, compiled programming language designed by Google. It combines the efficiency of compiled languages with the ease of use of dynamically typed interpreted languages. Go features built-in concurrency support through goroutines and channels, making it well-suited for networked and multicore systems. It has a simple and clean syntax, fast compilation times, and efficient garbage collection. Go’s standard library is comprehensive, reducing the need for external dependencies. The language emphasizes simplicity and readability, with features like implicit interfaces and a lack of inheritance. Go is particularly popular for building microservices, web servers, and distributed systems. Its performance, simplicity, and robust tooling make it a favored choice for cloud-native development, DevOps tools, and large-scale backend systems.",
                        "video": "https://www.youtube.com/watch?v=446E-r0rXHI"
                    }
                ]
            },
            {
                "category": "Database",
                "members": [
                    {
                        "name": "PostgreSQL",
                        "description": "HTML stands for HyperText Markup Language. It is used on the frontend and gives the structure to the webpage which you can style using CSS and make interactive using JavaScript.",
                        "video": "https://www.youtube.com/watch?v=n2Fluyr3lbc"
                    },
                    {
                        "name": "MongoDB",
                        "description": "CSS or Cascading Style Sheets is the language used to style the frontend of any website. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.",
                        "video": "https://www.youtube.com/watch?v=-bt_y4Loofg"
                    },
                    {
                        "name": "MySQL",
                        "description": "JavaScript allows you to add interactivity to your pages. Common examples that you may have seen on the websites are sliders, click interactions, popups and so on.",
                        "video": "https://www.youtube.com/watch?v=Cz3WcZLRaWc"
                    }
                ]
            },
            {
                "category": "Authentication",
                "members": [
                    {
                        "name": "JWT",
                        "description": "JWT (JSON Web Token) is an open standard for securely transmitting information between parties as a JSON object. It consists of three parts: a header (which specifies the token type and algorithm used for signing), a payload (which contains the claims or the data being transmitted), and a signature (which is used to verify the token’s integrity and authenticity). JWTs are commonly used for authentication and authorization purposes, allowing users to securely transmit and validate their identity and permissions across web applications and APIs. They are compact, self-contained, and can be easily transmitted in HTTP headers, making them popular for modern web and mobile applications.",
                        "video": "https://www.youtube.com/watch?v=K6pwjJ5h0Gg"
                    },
                    {
                        "name": "OAuth",
                        "description": "OAuth is an open standard for authorization that allows third-party applications to access a user’s resources without exposing their credentials. It works by issuing access tokens after users grant permission, which applications then use to interact with resource servers on behalf of the user. This process involves a resource owner (the user), a resource server (which holds the data), and an authorization server (which issues tokens). OAuth enables secure, token-based access management, commonly used for granting applications permissions to interact with services like social media accounts or cloud storage.",
                        "video": "https://www.youtube.com/watch?v=ZV5yTm4pT8g"
                    },                    
                    {
                        "name": "Basic authentication",
                        "description": "Basic Authentication is a simple HTTP authentication scheme built into the HTTP protocol. It works by sending a user’s credentials (username and password) encoded in base64 format within the HTTP header. When a client makes a request to a server requiring authentication, the server responds with a 401 status code and a “WWW-Authenticate” header. The client then resends the request with the Authorization header containing the word “Basic” followed by the base64-encoded string of “username:password”. While easy to implement, Basic Authentication has significant security limitations: credentials are essentially sent in plain text (base64 is easily decoded), and it doesn’t provide any encryption. Therefore, it should only be used over HTTPS connections to ensure the credentials are protected during transmission. Due to its simplicity and lack of advanced security features, Basic Authentication is generally recommended only for simple, low-risk scenarios or as a fallback mechanism.",
                        "video": "https://www.youtube.com/watch?v=rhi1eIjSbvk"
                    },
                    {
                        "name": "Token authentication",
                        "description": "Token-based authentication is a protocol which allows users to verify their identity, and in return receive a unique access token. During the life of the token, users then access the website or app that the token has been issued for, rather than having to re-enter credentials each time they go back to the same webpage, app, or any resource protected with that same token. Auth tokens work like a stamped ticket. The user retains access as long as the token remains valid. Once the user logs out or quits an app, the token is invalidated. Token-based authentication is different from traditional password-based or server-based authentication techniques. Tokens offer a second layer of security, and administrators have detailed control over each action and transaction.",
                        "video": "https://www.youtube.com/watch?v=giKeegmeaKw"
                    }
                ]
            }

        ]
    }
]
